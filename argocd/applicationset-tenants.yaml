apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: tenants-helm
  namespace: argocd
spec:
  generators:
    - git:
        repoURL: https://github.com/phwildzeiss/KeyStore-gitops
        revision: HEAD
        directories:
          - path: tenants/*
        requeueAfterSeconds: 30
  template:
    metadata:
      name: '{{path.basename}}-app'
      annotations:
        argocd-image-updater.argoproj.io/image-list: |
          orders=phwildzeiss/k8s-multi-tenant-order-service
          inventory=phwildzeiss/k8s-multi-tenant-inventory
          frontend=ghcr.io/phwildzeiss/k8s-multi-tenant-frontend

        argocd-image-updater.argoproj.io/orders.helm-value: images.order.tag
        argocd-image-updater.argoproj.io/orders.update-strategy: digest

        argocd-image-updater.argoproj.io/inventory.helm-value: images.inventory.tag
        argocd-image-updater.argoproj.io/inventory.update-strategy: digest

        argocd-image-updater.argoproj.io/frontend.helm.image-name: images.frontend.repository
        argocd-image-updater.argoproj.io/frontend.helm.image-tag: images.frontend.tag
        argocd-image-updater.argoproj.io/frontend.update-strategy: digest

        argocd-image-updater.argoproj.io/write-back-method: argocd

    spec:
      project: default
      source:
        repoURL: https://github.com/phwildzeiss/KeyStore-gitops
        targetRevision: HEAD
        path: helm-app                          # Chart-Verzeichnis
        helm:
          valueFiles:
            - '../{{path}}/values.yaml'            # Tenant-spezifische Werte
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{path.basename}}'          # z.â€¯B. tenant-a
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
